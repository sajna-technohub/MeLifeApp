package com.technohub.melifeapp.views;import android.app.ProgressDialog;import android.content.Context;import android.content.Intent;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import android.graphics.Color;import android.graphics.drawable.ColorDrawable;import android.graphics.drawable.Drawable;import android.os.Bundle;import androidx.annotation.Nullable;import androidx.fragment.app.DialogFragment;import androidx.fragment.app.Fragment;import androidx.fragment.app.FragmentTransaction;import android.os.CountDownTimer;import android.os.Handler;import android.text.Html;import android.text.method.LinkMovementMethod;import android.util.Log;import android.view.Gravity;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.view.animation.Animation;import android.view.animation.AnimationUtils;import android.webkit.WebView;import android.widget.Button;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.ProgressBar;import android.widget.RelativeLayout;import android.widget.TextView;import android.widget.Toast;import com.github.ybq.android.spinkit.SpinKitView;import com.kaopiz.kprogresshud.KProgressHUD;import com.skydoves.elasticviews.ElasticButton;import com.squareup.picasso.Picasso;import com.technohub.melifeapp.Interfaces.IExam;import com.technohub.melifeapp.Interfaces.Itestcategory;import com.technohub.melifeapp.R;import com.technohub.melifeapp.classes.DataDATA;import com.technohub.melifeapp.classes.HtmlImgConverter;import com.technohub.melifeapp.models.LoadQuestionResponse;import com.technohub.melifeapp.models.LoginResponse;import com.technohub.melifeapp.models.SaveAnswerResponse;import com.technohub.melifeapp.models.TestcategoryResponse;import com.technohub.melifeapp.presenter.ExamPresenter;import com.technohub.melifeapp.presenter.TestCategoryPresenter;import com.technohub.melifeapp.services.ApiClient;import com.technohub.melifeapp.views.ui.home.HomeFragment;import org.sufficientlysecure.htmltextview.HtmlHttpImageGetter;import org.sufficientlysecure.htmltextview.HtmlTextView;import org.sufficientlysecure.htmltextview.OnClickATagListener;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.ArrayList;import java.util.Calendar;import java.util.Date;import java.util.List;import java.util.concurrent.TimeUnit;import cn.pedant.SweetAlert.SweetAlertDialog;import io.github.kexanie.library.MathView;public class ExamFragment extends Fragment implements IExam.View , Itestcategory.View {    HtmlTextView examBtnOption3,examBtnOption4,examBtnOption5;    HtmlTextView examBtnOption1,examBtnOption2;    WebView tableview;    ImageView imagebelowqn;    Handler handler=new Handler();    ProgressDialog progressdialog;    Button testbtnsubmit;    HtmlTextView examTxtQuestion,imgTxtQuestion;    public MathView  mathBtnOption3,mathBtnOption4,mathBtnOption5, mathBtnOption1,mathBtnOption2,mathTxtQuestion;    TextView examTxtQno,examTxttestname,countdownTimerText,examTxtimgQno;    TextView tabletextview,option_a,option_b,option_c,option_e,option_d;    Runnable runnable;    private static CountDownTimer countDownTimer;    SweetAlertDialog sweet;//    ProgressDialog progressdialog;KProgressHUD kProgressHUD;    ImageView imgOption1,imgOption2,imgOption3,imgOption4,imgOption5;SpinKitView spinExam;LinearLayout mathlayout,htmllayout,imglayout;TextView exammathTxtQno;RelativeLayout imageviewlayout,imlayout;int catid=0;ImageView iv;    LoadQuestionResponse loadQuestionResponse;     int flag=0;    DialogFragment dialogFragment;    private static int TIME_OUT = 700;    List<DataDATA> data=new ArrayList<>();    View v;    ProgressBar timeProgress;    String userid,user_email,lastqn;    String exam_id,test_id,secid;    String s,t,testname;    Drawable d1;//         String htmlText = "Choose the image from the figure and answer the question <img src='https://homepages.cae.wisc.edu/~ece533/images/airplane.png'>";//         String urlimg="https://www.animatedimages.org/data/media/1574/animated-success-image-0013.gif";         ExamPresenter examPresenter;         Animation animation ;    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container,                             Bundle savedInstanceState) {        // Inflate the layout for this fragment        v=inflater.inflate(R.layout.examfragment, container, false);        v.setBackgroundColor(Color.WHITE);        animation = AnimationUtils.loadAnimation(getActivity(), R.anim.bounce_animation);        d1 = getResources().getDrawable(R.drawable.exam_btn_background);            userid = new LoginResponse().getSharedPreferences(getContext(), "userid");        user_email = new LoginResponse().getSharedPreferences(getContext(), "email");         kProgressHUD= KProgressHUD.create(getContext());        Log.e("Sessions Profile", userid + "  " + user_email);        examPresenter=new ExamPresenter(this,user_email,getContext());        examPresenter.created();        tableview.setVisibility(View.GONE);        tabletextview.setVisibility(View.GONE);        SimpleDateFormat dateFormat = new SimpleDateFormat("yy/MM/dd HH:mm:ss");        Date today = Calendar.getInstance().getTime();         s= dateFormat.format(today);        Log.e("startdate",s);        loadQuestion();        startTimer(60000);        return v;    }    void enableButtons()    {        examBtnOption1.setEnabled(true);        examBtnOption2.setEnabled(true);        examBtnOption3.setEnabled(true);        examBtnOption4.setEnabled(true);        examBtnOption5.setEnabled(true);    }    void disableButtons()    {        examBtnOption1.setEnabled(false);        examBtnOption2.setEnabled(false);        examBtnOption3.setEnabled(false);        examBtnOption4.setEnabled(false);        examBtnOption5.setEnabled(false);    }    void loadQuestion()    {        hideLoading();        tableview.setVisibility(View.GONE);        tabletextview.setVisibility(View.GONE);        examTxtimgQno.setVisibility(View.GONE);        examTxtQuestion.setVisibility(View.VISIBLE);        Bundle args = getArguments();        if (args != null) {            loadQuestionResponse = (LoadQuestionResponse) args.getParcelable("examResponse");             exam_id = (String) args.getString("exam_id");            testname = (String) args.getString("testname");            examTxttestname.setText(testname);            if(loadQuestionResponse.getMessage().equals("NO question available"))            {                  examPresenter.submitexam(exam_id,userid,user_email);            }            else {                test_id = loadQuestionResponse.getTest_id();                lastqn=loadQuestionResponse.getTotal_no_questions();                secid = loadQuestionResponse.getExamquestionData().get(0).getSection_id();                Log.e("args in examfrag", exam_id + " secid" + secid + " testid" + test_id);                Log.e("lastqn in loadqn",lastqn+ "  "+loadQuestionResponse.getExamquestionData().get(0).getQuestion_order());                examTxtQno.setText(loadQuestionResponse.getExamquestionData().get(flag).getQuestion_order()+". ");                examTxtQno.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getMcq_question_id()));                //load exam                //                    htmlTextView.setHtml("<h2>Hello wold</h2><img src=\"https://homepages.cae.wisc.edu/~ece533/images/fruits.png\"/>",                //                //                 new HtmlHttpImageGetter(htmlTextView));                if (loadQuestionResponse.getEqStatusOpts().equals("1") || loadQuestionResponse.getEqStatusOptsQns().equals("1")) {                    Log.e("Flow","hasqneqn_hasoptioneqn");                    Log.e("math", "math qn");                    exammathTxtQno.setVisibility(View.VISIBLE);                    exammathTxtQno.setText(loadQuestionResponse.getExamquestionData().get(flag).getQuestion_order()+". ");                    mathlayout.setVisibility(View.VISIBLE);                    htmllayout.setVisibility(View.GONE);                    imglayout.setVisibility(View.GONE);                    mathTxtQuestion.setText(loadQuestionResponse.getExamquestionData().get(flag).getQuestion());                    if (loadQuestionResponse.getNo_of_options_current_questions().equals("2")) {                        mathBtnOption1.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp());                        mathBtnOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                        mathBtnOption2.setText(loadQuestionResponse.getExamquestionData().get(0).getOptions().get(1).getOption_descp());                        mathBtnOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                        mathBtnOption3.setVisibility(View.GONE);                        mathBtnOption4.setVisibility(View.GONE);                        mathBtnOption5.setVisibility(View.GONE);                    } else if (loadQuestionResponse.getNo_of_options_current_questions().equals("3")) {                        mathBtnOption1.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp());                        mathBtnOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                        mathBtnOption2.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp());                        mathBtnOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                        mathBtnOption3.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp());                        mathBtnOption3.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_id()));                        mathBtnOption4.setVisibility(View.GONE);                        mathBtnOption5.setVisibility(View.GONE);                    } else if (loadQuestionResponse.getExamquestionData().get(flag).getOptions().equals("4")) {                        mathBtnOption1.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp());                        mathBtnOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                        mathBtnOption2.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp());                        mathBtnOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                        mathBtnOption3.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp());                        mathBtnOption3.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_id()));                        mathBtnOption4.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_descp());                        mathBtnOption4.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_id()));                        mathBtnOption5.setVisibility(View.GONE);                    } else {                        mathBtnOption1.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp());                        mathBtnOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                        mathBtnOption2.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp());                        mathBtnOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                        mathBtnOption3.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp());                        mathBtnOption3.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_id()));                        mathBtnOption4.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_descp());                        mathBtnOption4.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_id()));                        mathBtnOption5.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(4).getOption_descp());                        mathBtnOption5.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(4).getOption_id()));                    }                }                else  if (loadQuestionResponse.getEqStatusOpts().equals("N") || loadQuestionResponse.getEqStatusOptsQns().equals("1")) {                    Log.e("Flow","hasqneqn_hasoptioneqn");                    Log.e("math", "math qn");                    exammathTxtQno.setVisibility(View.VISIBLE);                    exammathTxtQno.setText(loadQuestionResponse.getExamquestionData().get(flag).getQuestion_order()+". ");                    mathlayout.setVisibility(View.VISIBLE);                    htmllayout.setVisibility(View.GONE);                    imglayout.setVisibility(View.GONE);                    mathTxtQuestion.setText(loadQuestionResponse.getExamquestionData().get(flag).getQuestion());                    if (loadQuestionResponse.getNo_of_options_current_questions().equals("2")) {                        mathBtnOption1.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp());                        mathBtnOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                        mathBtnOption2.setText(loadQuestionResponse.getExamquestionData().get(0).getOptions().get(1).getOption_descp());                        mathBtnOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                        mathBtnOption3.setVisibility(View.GONE);                        mathBtnOption4.setVisibility(View.GONE);                        mathBtnOption5.setVisibility(View.GONE);                    } else if (loadQuestionResponse.getNo_of_options_current_questions().equals("3")) {                        mathBtnOption1.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp());                        mathBtnOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                        mathBtnOption2.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp());                        mathBtnOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                        mathBtnOption3.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp());                        mathBtnOption3.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_id()));                        mathBtnOption4.setVisibility(View.GONE);                        mathBtnOption5.setVisibility(View.GONE);                    } else if (loadQuestionResponse.getExamquestionData().get(flag).getOptions().equals("4")) {                        mathBtnOption1.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp());                        mathBtnOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                        mathBtnOption2.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp());                        mathBtnOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                        mathBtnOption3.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp());                        mathBtnOption3.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_id()));                        mathBtnOption4.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_descp());                        mathBtnOption4.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_id()));                        mathBtnOption5.setVisibility(View.GONE);                    } else {                        mathBtnOption1.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp());                        mathBtnOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                        mathBtnOption2.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp());                        mathBtnOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                        mathBtnOption3.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp());                        mathBtnOption3.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_id()));                        mathBtnOption4.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_descp());                        mathBtnOption4.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_id()));                        mathBtnOption5.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(4).getOption_descp());                        mathBtnOption5.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(4).getOption_id()));                    }                }                else  if (loadQuestionResponse.getEqStatusOpts().equals("1") || loadQuestionResponse.getEqStatusOptsQns().equals("N")) {                    Log.e("Flow","hasqneqn_hasoptioneqn");                    Log.e("math", "math qn");                    exammathTxtQno.setVisibility(View.VISIBLE);                    exammathTxtQno.setText(loadQuestionResponse.getExamquestionData().get(flag).getQuestion_order()+". ");                    mathlayout.setVisibility(View.VISIBLE);                    htmllayout.setVisibility(View.GONE);                    imglayout.setVisibility(View.GONE);                    mathTxtQuestion.setText(loadQuestionResponse.getExamquestionData().get(flag).getQuestion());                    if (loadQuestionResponse.getNo_of_options_current_questions().equals("2")) {                        mathBtnOption1.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp());                        mathBtnOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                        mathBtnOption2.setText(loadQuestionResponse.getExamquestionData().get(0).getOptions().get(1).getOption_descp());                        mathBtnOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                        mathBtnOption3.setVisibility(View.GONE);                        mathBtnOption4.setVisibility(View.GONE);                        mathBtnOption5.setVisibility(View.GONE);                    } else if (loadQuestionResponse.getNo_of_options_current_questions().equals("3")) {                        mathBtnOption1.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp());                        mathBtnOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                        mathBtnOption2.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp());                        mathBtnOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                        mathBtnOption3.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp());                        mathBtnOption3.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_id()));                        mathBtnOption4.setVisibility(View.GONE);                        mathBtnOption5.setVisibility(View.GONE);                    } else if (loadQuestionResponse.getExamquestionData().get(flag).getOptions().equals("4")) {                        mathBtnOption1.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp());                        mathBtnOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                        mathBtnOption2.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp());                        mathBtnOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                        mathBtnOption3.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp());                        mathBtnOption3.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_id()));                        mathBtnOption4.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_descp());                        mathBtnOption4.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_id()));                        mathBtnOption5.setVisibility(View.GONE);                    } else {                        mathBtnOption1.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp());                        mathBtnOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                        mathBtnOption2.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp());                        mathBtnOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                        mathBtnOption3.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp());                        mathBtnOption3.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_id()));                        mathBtnOption4.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_descp());                        mathBtnOption4.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_id()));                        mathBtnOption5.setText(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(4).getOption_descp());                        mathBtnOption5.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(4).getOption_id()));                    }                }                if (loadQuestionResponse.getImgStatusQns().equals("1") && loadQuestionResponse.getImgStatusOpts().equals("N"))                {                    Log.e("Flow","qnhasimage_options_noimg");                    Log.e("imgstatus", "found");                    Log.e("question", loadQuestionResponse.getExamquestionData().get(flag).getQuestion());                    mathlayout.setVisibility(View.GONE);                    htmllayout.setVisibility(View.VISIBLE);                    imglayout.setVisibility(View.GONE);                    examTxtimgQno.setText(loadQuestionResponse.getExamquestionData().get(flag).getQuestion_order()+". ");                    examTxtQuestion.setHtml(loadQuestionResponse.getExamquestionData().get(flag).getQuestion(), new HtmlHttpImageGetter(examTxtQuestion));                    setImage(loadQuestionResponse.getExamquestionData().get(flag).getQuestion(), examTxtQuestion.getId(), imageviewlayout.getId());                    if (loadQuestionResponse.getNo_of_options_current_questions().equals("2")) {                        Log.e("options", "2 options");//                    if (loadQuestionResponse.getImgStatusOpts().equals("1")) {                        Log.e("imgstatus", "2 options");                        examBtnOption1.setHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp(), new HtmlHttpImageGetter(examBtnOption1));//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp(),examBtnOption1.getId());                        examBtnOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                        Log.e("opt1", examBtnOption1.getId() + "");                        examBtnOption2.setHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp(), new HtmlHttpImageGetter(examBtnOption2));                        Log.e("opt2", examBtnOption2.getId() + "");                        examBtnOption3.setVisibility(View.GONE);                        examBtnOption4.setVisibility(View.GONE);                        examBtnOption5.setVisibility(View.GONE);                    } else if (loadQuestionResponse.getNo_of_options_current_questions().equals("3")) {                        Log.e("options", "3 options");//                    if (loadQuestionResponse.getImgStatusOpts().equals("1")) {                        Log.e("imgstatus", "3 options");                        examBtnOption1.setHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp(), new HtmlHttpImageGetter(examBtnOption1));//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp(), examBtnOption1.getId());                        examBtnOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                        Log.e("opt1", examBtnOption1.getId() + "");                        examBtnOption2.setHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp(), new HtmlHttpImageGetter(examBtnOption2));//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp(), examBtnOption2.getId());                        examBtnOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                        Log.e("opt2", examBtnOption2.getId() + "");                        examBtnOption3.setHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp(), new HtmlHttpImageGetter(examBtnOption3));//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp(), examBtnOption3.getId());                        examBtnOption3.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_id()));                        Log.e("opt3", examBtnOption3.getId() + "");                        examBtnOption4.setVisibility(View.GONE);                        examBtnOption5.setVisibility(View.GONE);                    } else if (loadQuestionResponse.getNo_of_options_current_questions().equals("4")) {                        Log.e("options", "4 options");//                    if (loadQuestionResponse.getImgStatusOpts().equals("1")) {                        Log.e("imgstatus", "4 options");                        examBtnOption1.setHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp(), new HtmlHttpImageGetter(examBtnOption1));//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp(), examBtnOption1.getId());                        examBtnOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                        Log.e("opt1inload", examBtnOption1.getId() + "");                        Log.e("opt1", loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp());                        examBtnOption2.setHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp(), new HtmlHttpImageGetter(examBtnOption2));//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp(), examBtnOption2.getId());                        examBtnOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                        Log.e("opt2", examBtnOption2.getId() + "");                        examBtnOption3.setHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp(), new HtmlHttpImageGetter(examBtnOption3));//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp(), examBtnOption3.getId());                        examBtnOption3.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_id()));                        Log.e("opt3", examBtnOption3.getId() + "");                        examBtnOption4.setHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_descp(), new HtmlHttpImageGetter(examBtnOption4));//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_descp(), examBtnOption4.getId());                        examBtnOption4.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_id()));                        Log.e("opt4", examBtnOption4.getId() + "");                        examBtnOption5.setVisibility(View.GONE);                    } else if (loadQuestionResponse.getNo_of_options_current_questions().equals("5")) {                        Log.e("options", "5 options");//                    if (loadQuestionResponse.getImgStatusOpts().equals("1")) {                        Log.e("imgstatus", "5 options");                        examBtnOption1.setHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp(), new HtmlHttpImageGetter(examBtnOption1));//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp(), examBtnOption1.getId());                        examBtnOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                        Log.e("opt1", examBtnOption1.getId() + "");                        examBtnOption2.setHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp(), new HtmlHttpImageGetter(examBtnOption2));//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp(), examBtnOption2.getId());                        examBtnOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                        Log.e("opt2", examBtnOption2.getId() + "");                        examBtnOption3.setHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp(), new HtmlHttpImageGetter(examBtnOption3));//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp(), examBtnOption3.getId());                        examBtnOption3.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_id()));                        Log.e("opt3", examBtnOption3.getId() + "");                        examBtnOption4.setHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_descp(), new HtmlHttpImageGetter(examBtnOption4));//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_descp(), examBtnOption4.getId());                        examBtnOption4.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_id()));                        Log.e("opt4", examBtnOption4.getId() + "");                        examBtnOption5.setHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(4).getOption_descp(), new HtmlHttpImageGetter(examBtnOption5));//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(4).getOption_descp(), examBtnOption5.getId());                        examBtnOption5.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(4).getOption_id()));                        Log.e("opt5", examBtnOption5.getId() + "");                    }                }                else if (loadQuestionResponse.getImgStatusQns().equals("1") && loadQuestionResponse.getImgStatusOpts().equals("1"))                {                    Log.e("Flow","qn_hasimage_option_hasimgss");                    Log.e("imgstatus", "found");                    Log.e("question", loadQuestionResponse.getExamquestionData().get(flag).getQuestion());                    mathlayout.setVisibility(View.GONE);                    htmllayout.setVisibility(View.GONE);                    imglayout.setVisibility(View.VISIBLE);                    examTxtimgQno.setText(loadQuestionResponse.getExamquestionData().get(flag).getQuestion_order()+". ");                    imgTxtQuestion.setHtml(loadQuestionResponse.getExamquestionData().get(flag).getQuestion(), new HtmlHttpImageGetter(imgTxtQuestion));                    imagebelowqn.setVisibility(View.VISIBLE);                    Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getQuestion())).into(imagebelowqn);//                    setImage(loadQuestionResponse.getExamquestionData().get(flag).getQuestion(), imgTxtQuestion.getId(), imlayout.getId());                    if (loadQuestionResponse.getNo_of_options_current_questions().equals("2")) {                        Log.e("options", "2 options");                        option_a.setVisibility(View.VISIBLE);                        option_b.setVisibility(View.VISIBLE);//                    if (loadQuestionResponse.getImgStatusOpts().equals("1")) {                        Log.e("imgstatus", "2 options");                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp())).into(imgOption1);                        imgOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                        Log.e("opt1", imgOption1.getId() + "");                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp())).into(imgOption2);                        imgOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                        Log.e("opt2", imgOption2.getId() + "");                        imgOption3.setVisibility(View.GONE);                        imgOption4.setVisibility(View.GONE);                        imgOption5.setVisibility(View.GONE);                    } else if (loadQuestionResponse.getNo_of_options_current_questions().equals("3")) {                        option_a.setVisibility(View.VISIBLE);                        option_b.setVisibility(View.VISIBLE);                        option_c.setVisibility(View.VISIBLE);                        Log.e("options", "3 options");//                    if (loadQuestionResponse.getImgStatusOpts().equals("1")) {                        Log.e("imgstatus", "3 options");                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp())).into(imgOption1);//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp(), examBtnOption1.getId());                        imgOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                        Log.e("opt1", imgOption1.getId() + "");                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp())).into(imgOption2);                        imgOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                        Log.e("opt2", imgOption2.getId() + "");                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp())).into(imgOption3);//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp(), examBtnOption3.getId());                        imgOption3.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_id()));                        Log.e("opt3", imgOption3.getId() + "");                        imgOption4.setVisibility(View.GONE);                        imgOption5.setVisibility(View.GONE);                    } else if (loadQuestionResponse.getNo_of_options_current_questions().equals("4")) {                        option_a.setVisibility(View.VISIBLE);                        option_b.setVisibility(View.VISIBLE);                        option_c.setVisibility(View.VISIBLE);                        option_d.setVisibility(View.VISIBLE);                        Log.e("options", "4 options");//                    if (loadQuestionResponse.getImgStatusOpts().equals("1")) {                        Log.e("imgstatus", "4 options");                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp())).into(imgOption1);//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp(), examBtnOption1.getId());                        imgOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                        Log.e("opt1inload", imgOption1.getId() + "");                        Log.e("opt1", loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp());                        Log.e("optresponse", loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id());                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp())).into(imgOption2);//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp(), examBtnOption2.getId());                        imgOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                        Log.e("opt2", imgOption2.getId() + "");                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp())).into(imgOption3);//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp(), examBtnOption3.getId());                        imgOption3.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_id()));                        Log.e("opt3", imgOption3.getId() + "");                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_descp())).into(imgOption4);//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_descp(), examBtnOption4.getId());                        imgOption4.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_id()));                        Log.e("opt4", imgOption4.getId() + "");                        imgOption5.setVisibility(View.GONE);                    } else if (loadQuestionResponse.getNo_of_options_current_questions().equals("5")) {                        option_a.setVisibility(View.VISIBLE);                        option_b.setVisibility(View.VISIBLE);                        option_c.setVisibility(View.VISIBLE);                        option_d.setVisibility(View.VISIBLE);                        option_e.setVisibility(View.VISIBLE);                        Log.e("options", "5 options");//                    if (loadQuestionResponse.getImgStatusOpts().equals("1")) {                        Log.e("imgstatus", "5 options");                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp())).into(imgOption1);//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp(), examBtnOption1.getId());                        imgOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                        Log.e("opt1", imgOption1.getId() + "");                        Log.e("optresponse", loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id());                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp())).into(imgOption2);//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp(), examBtnOption2.getId());                        imgOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                        Log.e("opt2", imgOption2.getId() + "");                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp())).into(imgOption3);//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp(), examBtnOption3.getId());                        imgOption3.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_id()));                        Log.e("opt3", imgOption3.getId() + "");                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_descp())).into(imgOption4);//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_descp(), examBtnOption4.getId());                        imgOption4.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_id()));                        Log.e("opt4", imgOption4.getId() + "");                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(4).getOption_descp())).into(imgOption5);//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(4).getOption_descp(), examBtnOption5.getId());                        imgOption5.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(4).getOption_id()));                        Log.e("opt5", imgOption5.getId() + "");                    }                }                else if (loadQuestionResponse.getImgStatusQns().equals("N") && loadQuestionResponse.getImgStatusOpts().equals("1"))                {                    Log.e("Flow","Noqnimage_but_imgoptions");                    Log.e("imgstatus", "found");                    Log.e("question", loadQuestionResponse.getExamquestionData().get(flag).getQuestion());                    mathlayout.setVisibility(View.GONE);                    htmllayout.setVisibility(View.GONE);                    imglayout.setVisibility(View.VISIBLE);                    option_a.setVisibility(View.VISIBLE);                    option_b.setVisibility(View.VISIBLE);                    v.findViewById(R.id.imlayout).setVisibility(View.GONE);                    imgTxtQuestion.setHtml(loadQuestionResponse.getExamquestionData().get(flag).getQuestion(), new HtmlHttpImageGetter(imgTxtQuestion));//                    setImage(loadQuestionResponse.getExamquestionData().get(flag).getQuestion(), imgTxtQuestion.getId(), imlayout.getId());                    if (loadQuestionResponse.getNo_of_options_current_questions().equals("2")) {                        Log.e("options", "2 options");//                    if (loadQuestionResponse.getImgStatusOpts().equals("1")) {                        Log.e("imgstatus", "2 options");                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp())).into(imgOption1);//                    examBtnOption1.setHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp(), new HtmlHttpImageGetter(examBtnOption1));//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp(),examBtnOption1.getId());                        imgOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                        Log.e("opt1", imgOption1.getId() + "");                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp())).into(imgOption2);                        imgOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp(),examBtnOption2.getId());//                        examBtnOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                        Log.e("opt2", imgOption2.getId() + "");                        imgOption3.setVisibility(View.GONE);                        imgOption4.setVisibility(View.GONE);                        imgOption5.setVisibility(View.GONE);                    } else if (loadQuestionResponse.getNo_of_options_current_questions().equals("3"))                    {                        Log.e("options", "3 options");//                    if (loadQuestionResponse.getImgStatusOpts().equals("1")) {                        Log.e("imgstatus", "3 options");                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp())).into(imgOption1);//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp(), examBtnOption1.getId());                        imgOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                        Log.e("opt1", imgOption1.getId() + "");                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp())).into(imgOption2);                        imgOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                        Log.e("opt2", imgOption2.getId() + "");                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp())).into(imgOption3);//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp(), examBtnOption3.getId());                        imgOption3.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_id()));                        Log.e("opt3", imgOption3.getId() + "");                        imgOption4.setVisibility(View.GONE);                        imgOption5.setVisibility(View.GONE);                    } else if (loadQuestionResponse.getNo_of_options_current_questions().equals("4")) {                        Log.e("options", "4 options");//                    if (loadQuestionResponse.getImgStatusOpts().equals("1")) {                        Log.e("imgstatus", "4 options");                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp())).into(imgOption1);//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp(), examBtnOption1.getId());                        imgOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                        Log.e("opt1inload", imgOption1.getId() + "");                        Log.e("opt1", loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp());                        Log.e("optresponse", loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id());                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp())).into(imgOption2);//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp(), examBtnOption2.getId());                        imgOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                        Log.e("opt2", imgOption2.getId() + "");                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp())).into(imgOption3);//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp(), examBtnOption3.getId());                        imgOption3.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_id()));                        Log.e("opt3", imgOption3.getId() + "");                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_descp())).into(imgOption4);//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_descp(), examBtnOption4.getId());                        imgOption4.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_id()));                        Log.e("opt4", imgOption4.getId() + "");                        imgOption5.setVisibility(View.GONE);                    } else if (loadQuestionResponse.getNo_of_options_current_questions().equals("5")) {                        Log.e("options", "5 options");//                    if (loadQuestionResponse.getImgStatusOpts().equals("1")) {                        Log.e("imgstatus", "5 options");                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp())).into(imgOption1);//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp(), examBtnOption1.getId());                        imgOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                        Log.e("opt1", imgOption1.getId() + "");                        Log.e("optresponse", loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id());                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp())).into(imgOption2);//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp(), examBtnOption2.getId());                        imgOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                        Log.e("opt2", imgOption2.getId() + "");                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp())).into(imgOption3);//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp(), examBtnOption3.getId());                        imgOption3.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_id()));                        Log.e("opt3", imgOption3.getId() + "");                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_descp())).into(imgOption4);//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_descp(), examBtnOption4.getId());                        imgOption4.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_id()));                        Log.e("opt4", imgOption4.getId() + "");                        Picasso.get().load(CreateImgUrl(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(4).getOption_descp())).into(imgOption5);//                        setImage(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(4).getOption_descp(), examBtnOption5.getId());                        imgOption5.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(4).getOption_id()));                        Log.e("opt5", imgOption5.getId() + "");                    }                }                else {                    Log.e("Flow", "else potion");                    mathlayout.setVisibility(View.GONE);                    htmllayout.setVisibility(View.VISIBLE);                    imglayout.setVisibility(View.GONE);                    if (loadQuestionResponse.getExamquestionData().get(flag).getQuestion().contains("<table")) {                        setTable(loadQuestionResponse.getExamquestionData().get(flag).getQuestion());                        Log.e("settable", "no qn test");                        if (loadQuestionResponse.getNo_of_options_current_questions().equals("2")) {                            examBtnOption1.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp()));                            examBtnOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                            Log.e("opt1", examBtnOption1.getId() + "");                            examBtnOption2.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp()));                            examBtnOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                            Log.e("opt2", examBtnOption2.getId() + "");                            examBtnOption3.setVisibility(View.GONE);                            examBtnOption4.setVisibility(View.GONE);                            examBtnOption5.setVisibility(View.GONE);                        }                        else if (loadQuestionResponse.getNo_of_options_current_questions().equals("3")) {                            examBtnOption1.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp()));                            examBtnOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                            Log.e("opt1", examBtnOption1.getId() + "");                            examBtnOption2.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp()));                            examBtnOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                            Log.e("opt2", examBtnOption2.getId() + "");                            examBtnOption3.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp()));                            examBtnOption3.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_id()));                            Log.e("opt3", examBtnOption3.getId() + "");                            examBtnOption4.setVisibility(View.GONE);                            examBtnOption5.setVisibility(View.GONE);                        } else if (loadQuestionResponse.getNo_of_options_current_questions().equals("4")) {                            Log.e("settable", "else potion");                            examBtnOption1.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp()));                            examBtnOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                            Log.e("opt1", examBtnOption1.getId() + "");                            examBtnOption2.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp()));                            examBtnOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                            Log.e("opt2", examBtnOption2.getId() + "");                            examBtnOption3.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp()));                            examBtnOption3.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_id()));                            Log.e("opt3", examBtnOption3.getId() + "");                            examBtnOption4.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_descp()));                            examBtnOption4.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_id()));                            Log.e("opt4", examBtnOption4.getId() + "");                            examBtnOption5.setVisibility(View.GONE);                        } else {                            Log.e("imgstatus", "img Not found");                            examBtnOption1.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp()));                            examBtnOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                            Log.e("opt1", examBtnOption1.getId() + "");                            examBtnOption2.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp()));                            examBtnOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                            Log.e("opt2", examBtnOption2.getId() + "");                            examBtnOption3.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp()));                            examBtnOption3.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_id()));                            Log.e("opt3", examBtnOption3.getId() + "");                            examBtnOption4.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_descp()));                            examBtnOption4.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_id()));                            Log.e("opt4", examBtnOption4.getId() + "");                            examBtnOption5.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(4).getOption_descp()));                            examBtnOption5.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(4).getOption_id()));                            Log.e("opt5", examBtnOption5.getId() + "");                        }                    } else {                        Log.e("loadqn", loadQuestionResponse.getExamquestionData().get(flag).getQuestion());                        examTxtQuestion.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getQuestion()));                        Log.e("Questionnext", loadQuestionResponse.getExamquestionData().get(flag).getQuestion());                        Log.e("no_options", loadQuestionResponse.getNo_of_options_current_questions());                        if (loadQuestionResponse.getNo_of_options_current_questions().equals("2")) {                            examBtnOption1.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp()));                            examBtnOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                            Log.e("opt1", examBtnOption1.getId() + "");                            examBtnOption2.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp()));                            examBtnOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                            Log.e("opt2", examBtnOption2.getId() + "");                            examBtnOption3.setVisibility(View.GONE);                            examBtnOption4.setVisibility(View.GONE);                            examBtnOption5.setVisibility(View.GONE);                        } else if (loadQuestionResponse.getNo_of_options_current_questions().equals("3")) {                            examBtnOption1.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp()));                            examBtnOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                            Log.e("opt1", examBtnOption1.getId() + "");                            examBtnOption2.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp()));                            examBtnOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                            Log.e("opt2", examBtnOption2.getId() + "");                            examBtnOption3.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp()));                            examBtnOption3.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_id()));                            Log.e("opt3", examBtnOption3.getId() + "");                            examBtnOption4.setVisibility(View.GONE);                            examBtnOption5.setVisibility(View.GONE);                        } else if (loadQuestionResponse.getNo_of_options_current_questions().equals("4")) {                            examBtnOption1.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp()));                            examBtnOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                            Log.e("opt1", examBtnOption1.getId() + "");                            examBtnOption2.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp()));                            examBtnOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                            Log.e("opt2", examBtnOption2.getId() + "");                            examBtnOption3.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp()));                            examBtnOption3.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_id()));                            Log.e("opt3", examBtnOption3.getId() + "");                            examBtnOption4.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_descp()));                            examBtnOption4.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_id()));                            Log.e("opt4", examBtnOption4.getId() + "");                            examBtnOption5.setVisibility(View.GONE);                        } else {                            Log.e("imgstatus", "img Not found");                            examBtnOption1.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_descp()));                            examBtnOption1.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(0).getOption_id()));                            Log.e("opt1", examBtnOption1.getId() + "");                            examBtnOption2.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_descp()));                            examBtnOption2.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(1).getOption_id()));                            Log.e("opt2", examBtnOption2.getId() + "");                            examBtnOption3.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_descp()));                            examBtnOption3.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(2).getOption_id()));                            Log.e("opt3", examBtnOption3.getId() + "");                            examBtnOption4.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_descp()));                            examBtnOption4.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(3).getOption_id()));                            Log.e("opt4", examBtnOption4.getId() + "");                            examBtnOption5.setText(Html.fromHtml(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(4).getOption_descp()));                            examBtnOption5.setId(Integer.parseInt(loadQuestionResponse.getExamquestionData().get(flag).getOptions().get(4).getOption_id()));                            Log.e("opt5", examBtnOption5.getId() + "");                        }                    }                }            }        }    }    @Override    public void loadTestList(TestcategoryResponse testlist) {    }    @Override    public void loadNoQnsFragment() {    }    @Override    public void loadReportFragment()    {    }    private void startTimer(int noOfMinutes) {        countDownTimer = new CountDownTimer(922337248 , 1000) {            public void onTick(long millisUntilFinished) {                long millis = millisUntilFinished;                //Convert milliseconds into hour,minute and seconds                String hms = String.format("%02d:%02d:%02d", TimeUnit.MILLISECONDS.toHours(millis), TimeUnit.MILLISECONDS.toMinutes(millis) - TimeUnit.HOURS.toMinutes(TimeUnit.MILLISECONDS.toHours(millis)), TimeUnit.MILLISECONDS.toSeconds(millis) - TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes(millis)));                int increment = ((timeProgress.getMax() * 50) / (60000));                timeProgress.setProgress(timeProgress.getProgress() + increment);                countdownTimerText.setText(hms);//set text            }            public void onFinish() {                timeProgress.setProgress(timeProgress.getMax());                countdownTimerText.setText("TIME'S UP!!"); //On finish change timer text                countDownTimer = null;//set CountDownTimer to null            }        }.start();    }    @Override    public void loadExamFragment(LoadQuestionResponse loadQuestionResponse, String exam_id) {        Log.e("load","exam  or instruction fragment");        Log.e("load examid got",exam_id);        ExamFragment examFragment=new ExamFragment();        InstructionFragment instructionFragment=new InstructionFragment();        Bundle bundle = new Bundle();        FragmentTransaction transaction;        hideLoading();        if (loadQuestionResponse.getExamquestionData().get(0).getIs_instruction_display().equals("0")) {            handler.removeCallbacks(null);            bundle.putParcelable("examResponse", loadQuestionResponse);            bundle.putString("exam_id",exam_id);            instructionFragment.setArguments(bundle);            transaction = getFragmentManager().beginTransaction();             showLoading();            transaction.replace(R.id.qa_layout, instructionFragment);        }        else        {            bundle.putParcelable("examResponse", loadQuestionResponse);            bundle.putString("exam_id",exam_id);            examFragment.setArguments(bundle);            transaction = getFragmentManager().beginTransaction();            showLoading();            transaction.replace(R.id.qa_layout, examFragment);        }        transaction.addToBackStack(null);        transaction.commit();        hideLoading();    }    @Override    public void init() {        examBtnOption1=v.findViewById(R.id.examBtnOption1);        examBtnOption2=v.findViewById(R.id.examBtnOption2);        examBtnOption3=v.findViewById(R.id.examBtnOption3);        examBtnOption4=v.findViewById(R.id.examBtnOption4);        examBtnOption5=v.findViewById(R.id.examBtnOption5);        imagebelowqn=v.findViewById(R.id.imagebelowqn);        examTxttestname=v.findViewById(R.id.examTxttestname);        testbtnsubmit=v.findViewById(R.id.testbtnsubmit);//        htmlTextView=v.findViewById(R.id.examTxtQuestion);        examTxtQuestion=v.findViewById(R.id.examTxtQuestion);        mathTxtQuestion=v.findViewById(R.id.mathTxtQuestion);        imgTxtQuestion=v.findViewById(R.id.imgTxtQuestion);        examTxtQno=v.findViewById(R.id.examTxtQno);         spinExam=v.findViewById(R.id.examSpinKit);         mathlayout=v.findViewById(R.id.mathlayout);        exammathTxtQno=v.findViewById(R.id.exammathTxtQno);         htmllayout=v.findViewById(R.id.htmllayout);        imglayout=v.findViewById(R.id.imglayout);        imlayout=v.findViewById(R.id.imlayout);        imageviewlayout=v.findViewById(R.id.imageviewlayout);        tableview=v.findViewById(R.id.examWviewtable);        tabletextview=v.findViewById(R.id.tabletextview);        timeProgress=v.findViewById(R.id.timeProgress);        countdownTimerText=v.findViewById(R.id.countdownTimerText);        mathBtnOption1=v.findViewById(R.id.mathBtnOption1);        mathBtnOption2=v.findViewById(R.id.mathBtnOption2);        mathBtnOption3=v.findViewById(R.id.mathBtnOption3);        mathBtnOption4=v.findViewById(R.id.mathBtnOption4);        mathBtnOption5=v.findViewById(R.id.mathBtnOption5);        imgOption1=v.findViewById(R.id.imgOption1);        imgOption2=v.findViewById(R.id.imgOption2);        imgOption3=v.findViewById(R.id.imgOption3);        imgOption4=v.findViewById(R.id.imgOption4);        imgOption5=v.findViewById(R.id.imgOption5);        option_a=v.findViewById(R.id.option_a);        option_b=v.findViewById(R.id.option_b);        option_c=v.findViewById(R.id.option_c);        option_d=v.findViewById(R.id.option_d);        option_e=v.findViewById(R.id.option_e);        examTxtimgQno=v.findViewById(R.id.examTxtimgQno);    }boolean datedifference(String s,String t){    Log.e("start",s);    Log.e("end",t);    SimpleDateFormat format = new SimpleDateFormat("yy/MM/dd HH:mm:ss");        Date d1 = null;                Date d2 = null;                try {                    d1 = format.parse(s);                    d2 = format.parse(t);                } catch (ParseException e) {                    e.printStackTrace();                }                long diff = d2.getTime() - d1.getTime();                long diffSeconds = diff / 1000;                Log.e("Time in seconds: " , diffSeconds + " seconds.");   if(diffSeconds<5)   {       return true;   }   else   {       return false;   }}void showAlert(String qid,String optid){    sweet=new SweetAlertDialog(getContext(),SweetAlertDialog.NORMAL_TYPE);    sweet.setCancelable(false);    sweet.setTitleText("Save Answer Alert");    sweet.setContentText("Would you like to continue? ");    sweet.setConfirmText("Ok!");    sweet .setConfirmClickListener(new SweetAlertDialog.OnSweetClickListener() {                                         @Override                                         public void onClick(SweetAlertDialog sweetAlertDialog) {                                             examPresenter.saveanswerbeforeidealtime(examTxtQno.getText().toString(),exam_id,loadQuestionResponse.getTest_id(),userid,"","1","ydtdt",qid,optid,lastqn);                                             sweetAlertDialog.dismissWithAnimation();                                         }                                     }            );    sweet .show();}void setTable(String tablestring){        examTxtQuestion.setVisibility(View.INVISIBLE);        tableview.setVisibility(View.VISIBLE);        String qntextwithouttable;        int start = tablestring.indexOf("<table");        int end = tablestring.indexOf("</table>");        String ext = null;        Log.e("tableindex", start + " " + end);//    String s=img.substring(start, end);        String s = tablestring.substring(start, end);        if(start!=0) {            qntextwithouttable = tablestring.substring(0, start);            Log.e("ntablestring", qntextwithouttable);        }        else        {            qntextwithouttable = tablestring.substring(end);            Log.e("ntablestring", qntextwithouttable);        }        Log.e("tablestring", s);        String qn=tablestring.replace(s,"");              Log.e("removed", qn);              tabletextview.setText(Html.fromHtml(qntextwithouttable));              tabletextview.setVisibility(View.VISIBLE);              tableview.loadDataWithBaseURL(null, s, "text/html", "utf-8", null);}String CreateImgUrl(String img){    int end=0;    int start = img.indexOf("ckfinder");    String ext=null;    if(img.contains("PNG"))    {        end = img.indexOf("PNG");        ext="PNG";    }    else if(img.contains("png"))    {        end=img.indexOf("png");        ext="png";    }    Log.e("imgurl",start+" "+end);//    String s=img.substring(start, end);    String s=img.substring(start, end);    Log.e("imgviewUrl", ApiClient.IMG_URL+s.trim()+ext);    String imgurl=ApiClient.IMG_URL+s.trim()+ext.trim();    return imgurl;}void setImage(String img,int id,int rel_id){    Log.e("setimage",img+" "+img.length());    iv = new ImageView(getContext());    RelativeLayout relativelayout = (RelativeLayout) v.findViewById(rel_id);    RelativeLayout.LayoutParams params = new RelativeLayout            .LayoutParams(RelativeLayout.LayoutParams.MATCH_PARENT, 200);    LinearLayout.LayoutParams paramss = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 100);    params.setMargins(0, 400, 0, 0);    paramss.setMargins(0, 0, 0, 30);    iv.setLayoutParams(paramss);    params.addRule(RelativeLayout.BELOW,id);//    String temp="http://3.7.48.112/ckfinder/userfiles/files/Q1.PNG";    int end=0;    int start = img.indexOf("ckfinder");    String ext=null;    if(img.contains("PNG"))    {        end = img.indexOf("PNG");        ext="PNG";    }    else if(img.contains("png"))    {        end=img.indexOf("png");        ext="png";    }    Log.e("imgurl",start+" "+end);//    String s=img.substring(start, end);    String s=img.substring(start, end);    Log.e("imgurl",ApiClient.IMG_URL+s+ext);    Picasso.get().load(ApiClient.IMG_URL+s+ext).into(iv);    iv.setLayoutParams(params);    relativelayout.addView(iv);}String getClicktime(){    SimpleDateFormat dateFormat = new SimpleDateFormat("yy/MM/dd HH:mm:ss");    Date today = Calendar.getInstance().getTime();    t= dateFormat.format(today);    Log.e("enddate",t);    return t;}void setwhitedrawable(){    examBtnOption1.setBackground(d1);    examBtnOption2.setBackground(d1);    examBtnOption3.setBackground(d1);    examBtnOption4.setBackground(d1);    examBtnOption5.setBackground(d1);    examBtnOption1.setTextColor(getResources().getColor(R.color.questionblack));    examBtnOption2.setTextColor(getResources().getColor(R.color.questionblack));    examBtnOption3.setTextColor(getResources().getColor(R.color.questionblack));    examBtnOption4.setTextColor(getResources().getColor(R.color.questionblack));    examBtnOption5.setTextColor(getResources().getColor(R.color.questionblack));    examBtnOption1.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_radio_button_unchecked_black_24dp, 0, 0, 0);    examBtnOption2.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_radio_button_unchecked_black_24dp, 0, 0, 0);    examBtnOption3.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_radio_button_unchecked_black_24dp, 0, 0, 0);    examBtnOption4.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_radio_button_unchecked_black_24dp, 0, 0, 0);    examBtnOption5.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_radio_button_unchecked_black_24dp, 0, 0, 0);}    @Override    public void initClicks() {        Drawable d = getResources().getDrawable(R.drawable.optionbackground);        Drawable imgdr = getResources().getDrawable(R.drawable.button_btngreenbg);        testbtnsubmit.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                examPresenter.submitexam(exam_id,userid,user_email);            }        });        imgOption1.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if(imgOption1.isEnabled()) {                   disableButtons();                }                //I want to start animation here                t=getClicktime();//                imgOption1.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_check_circle_black_24dp, 0, 0, 0);//                imgOption1.setTextColor(Color.WHITE);//                imgOption1.startAnimation(animation);                dialogFragment=new SuccessFrag2();                showDialog(dialogFragment);                new Handler().postDelayed(new Runnable() {                    @Override                    public void run() {                        // This method will be executed once the timer is over                        // Start your app main activity                        dialogFragment.dismiss(); // when the task active then close the dialog//                        imgOption1.clearAnimation();                        Log.e("qid",examTxtQno.getId()+"");                        Log.e("optid",imgOption1.getId()+"");                        if(datedifference(s,t)==true)                            showAlert(examTxtQno.getId()+"",imgOption1.getId()+"");                        else {                            examPresenter.saveAnswer(examTxtQno.getText().toString(), exam_id, loadQuestionResponse.getTest_id(), userid, "", "1", "ydtdt", examTxtQno.getId() + "", imgOption1.getId() + "", lastqn);                            imgOption1.setEnabled(true);                        }                    }                }, TIME_OUT);            }        });        imgOption2.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if(imgOption2.isEnabled())                    disableButtons();                //I want to start animation here                t=getClicktime();//                imgOption2.startAnimation(animation);                dialogFragment=new SuccessFrag2();                showDialog(dialogFragment);                new Handler().postDelayed(new Runnable() {                    @Override                    public void run() {                        // This method will be executed once the timer is over                        // Start your app main activity                        dialogFragment.dismiss(); // when the task active then close the dialog//                        imgOption2.clearAnimation();                        Log.e("qid",examTxtQno.getId()+"");                        Log.e("optid",imgOption1.getId()+"");                        if(datedifference(s,t)==true)                            showAlert(examTxtQno.getId()+"",imgOption2.getId()+"");                        else {                            examPresenter.saveAnswer(examTxtQno.getText().toString(), exam_id, loadQuestionResponse.getTest_id(), userid, "", "1", "ydtdt", examTxtQno.getId() + "", imgOption2.getId() + "", lastqn);                            imgOption2.setEnabled(true);                        }                    }                }, TIME_OUT);            }        });        imgOption3.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if(imgOption3.isEnabled())                    disableButtons();                //I want to start animation here                t=getClicktime();//                imgOption3.startAnimation(animation);                dialogFragment=new SuccessFrag2();                showDialog(dialogFragment);                new Handler().postDelayed(new Runnable() {                    @Override                    public void run() {                        // This method will be executed once the timer is over                        // Start your app main activity                        dialogFragment.dismiss(); // when the task active then close the dialog//                        imgOption3.clearAnimation();                        Log.e("qid",examTxtQno.getId()+"");                        Log.e("optid",imgOption3.getId()+"");                        if(datedifference(s,t)==true)                            showAlert(examTxtQno.getId()+"",imgOption3.getId()+"");                        else                            {                            examPresenter.saveAnswer(examTxtQno.getText().toString(), exam_id, loadQuestionResponse.getTest_id(), userid, "", "1", "ydtdt", examTxtQno.getId() + "", imgOption3.getId() + "", lastqn);                            imgOption3.setEnabled(true);                            }                    }                }, TIME_OUT);            }        });        imgOption4.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if(imgOption4.isEnabled())                    disableButtons();                //I want to start animation here                t=getClicktime();//                imgOption4.startAnimation(animation);                dialogFragment=new SuccessFrag2();                showDialog(dialogFragment);                new Handler().postDelayed(new Runnable() {                    @Override                    public void run() {                        // This method will be executed once the timer is over                        // Start your app main activity                        dialogFragment.dismiss(); // when the task active then close the dialog//                        imgOption4.clearAnimation();                        Log.e("qid",examTxtQno.getId()+"");                        Log.e("optid",imgOption4.getId()+"");                        if(datedifference(s,t)==true)                            showAlert(examTxtQno.getId()+"",imgOption4.getId()+"");                        else {                            examPresenter.saveAnswer(examTxtQno.getText().toString(), exam_id, loadQuestionResponse.getTest_id(), userid, "", "1", "ydtdt", examTxtQno.getId() + "", imgOption4.getId() + "", lastqn);                            imgOption4.setEnabled(true);                        }                    }                }, TIME_OUT);            }        });        imgOption5.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if(imgOption5.isEnabled())                    disableButtons();                //I want to start animation here                t=getClicktime();//                imgOption5.startAnimation(animation);                dialogFragment=new SuccessFrag2();                showDialog(dialogFragment);                new Handler().postDelayed(new Runnable() {                    @Override                    public void run() {                        // This method will be executed once the timer is over                        // Start your app main activity                        dialogFragment.dismiss(); // when the task active then close the dialog//                        imgOption5.clearAnimation();                        Log.e("qid",examTxtQno.getId()+"");                        Log.e("optid",imgOption5.getId()+"");                        if(datedifference(s,t)==true)                            showAlert(examTxtQno.getId()+"",imgOption5.getId()+"");                        else {                            examPresenter.saveAnswer(examTxtQno.getText().toString(), exam_id, loadQuestionResponse.getTest_id(), userid, "", "1", "ydtdt", examTxtQno.getId() + "", imgOption5.getId() + "", lastqn);                            imgOption5.setEnabled(true);                        }                    }                }, TIME_OUT);            }        });        examBtnOption1.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if(examBtnOption1.isEnabled()) {                    disableButtons();                }                //I want to start animation here                t=getClicktime();                examBtnOption1.setBackground(d);                examBtnOption1.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_check_circle_black_24dp, 0, 0, 0);                examBtnOption1.setTextColor(Color.WHITE);//                examBtnOption1.startAnimation(animation);//                dialogFragment=new SuccessFrag2();//                showDialog(dialogFragment);                handler.postDelayed(new Runnable() {                    @Override                    public void run() {                        // This method will be executed once the timer is over                        // Start your app main activity//                        dialogFragment.dismiss(); // when the task active then close the dialog//                        examBtnOption1.clearAnimation();                        Log.e("qid",examTxtQno.getId()+"");                        Log.e("optid",examBtnOption1.getId()+"");                        if(datedifference(s,t)==true)                                showAlert(examTxtQno.getId()+"",examBtnOption1.getId()+"");                        else {                            examPresenter.saveAnswer(examTxtQno.getText().toString(), exam_id, loadQuestionResponse.getTest_id(), userid, "", "1", "ydtdt", examTxtQno.getId() + "", examBtnOption1.getId() + "", lastqn);                            examBtnOption1.setEnabled(true);                        }                    }                }, TIME_OUT);            }        });        examBtnOption2.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if(examBtnOption2.isEnabled())                    disableButtons();                t=getClicktime();                examBtnOption2.setBackground(d);                examBtnOption2.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_check_circle_black_24dp, 0, 0, 0);                examBtnOption2.setTextColor(Color.WHITE);//                examBtnOption2.startAnimation(animation);                dialogFragment=new SuccessFrag3();                showDialog(dialogFragment);                handler.postDelayed(new Runnable() {                    @Override                    public void run() {                        // This method will be executed once the timer is over                        // Start your app main activity                        dialogFragment.dismiss(); // when the task active then close the dialog//                        examBtnOption2.clearAnimation();                        Log.e("qid", examTxtQno.getId() + "");                        Log.e("optid", examBtnOption2.getId() + "");                        if (datedifference(s, t) == true)                            showAlert(examTxtQno.getId() + "", examBtnOption1.getId() + "");                        else {                            examPresenter.saveAnswer(examTxtQno.getText().toString(), exam_id, loadQuestionResponse.getTest_id(), userid, "", "1", "ydtdt", examTxtQno.getId() + "", examBtnOption1.getId() + "", lastqn);                            examBtnOption2.setEnabled(true);                        }                    }                }, TIME_OUT);            }        });        examBtnOption3.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if(examBtnOption3.isEnabled())                    disableButtons();                t=getClicktime();                examBtnOption3.setBackground(d);                examBtnOption3.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_check_circle_black_24dp, 0, 0, 0);                examBtnOption3.setTextColor(Color.WHITE);                //                examBtnOption3.startAnimation(animation);                dialogFragment=new SuccessFrag2();                showDialog(dialogFragment);                handler.postDelayed(new Runnable() {                    @Override                    public void run() {                        // This method will be executed once the timer is over                        // Start your app main activity                        dialogFragment.dismiss(); // when the task active then close the dialog//                        examBtnOption3.clearAnimation();                        Log.e("qid",examTxtQno.getId()+"");                        Log.e("optid",examBtnOption3.getId()+"");                        if(datedifference(s,t)==true)                            showAlert(examTxtQno.getId()+"",examBtnOption1.getId()+"");                        else {                            examPresenter.saveAnswer(examTxtQno.getText().toString(), exam_id, loadQuestionResponse.getTest_id(), userid, "", "1", "ydtdt", examTxtQno.getId() + "", examBtnOption1.getId() + "", lastqn);                            examBtnOption3.setEnabled(true);                        }                    }                }, TIME_OUT);            }        });        examBtnOption4.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if(examBtnOption4.isEnabled())                    disableButtons();                t=getClicktime();                examBtnOption4.setBackground(d);                examBtnOption4.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_check_circle_black_24dp, 0, 0, 0);                examBtnOption4.setTextColor(Color.WHITE);//                examBtnOption4.startAnimation(animation);                dialogFragment=new SuccessFrag2();                showDialog(dialogFragment);                handler.postDelayed(new Runnable() {                    @Override                    public void run() {                        // This method will be executed once the timer is over                        // Start your app main activity                        dialogFragment.dismiss(); // when the task active then close the dialog//                        examBtnOption4.clearAnimation();                        Log.e("qid",examTxtQno.getId()+"");                        Log.e("optid",examBtnOption4.getId()+"");                        if(datedifference(s,t)==true)                        {                            showAlert(examTxtQno.getId()+"",examBtnOption1.getId()+"");                        }                        else {                            examPresenter.saveAnswer(examTxtQno.getText().toString(), exam_id, loadQuestionResponse.getTest_id(), userid, "", "1", "ydtdt", examTxtQno.getId() + "", examBtnOption1.getId() + "", lastqn);                            examBtnOption4.setEnabled(true);                        }                    }                }, TIME_OUT);            }        });        examBtnOption5.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if(examBtnOption5.isEnabled())                    disableButtons();                t=getClicktime();                examBtnOption5.setBackground(d);                examBtnOption5.setCompoundDrawablesWithIntrinsicBounds(R.drawable.ic_check_circle_black_24dp, 0, 0, 0);                examBtnOption5.setTextColor(Color.WHITE);                //                examBtnOption5.startAnimation(animation);                dialogFragment=new SuccessFrag3();                showDialog(dialogFragment);                handler.postDelayed(new Runnable() {                    @Override                    public void run() {                        // This method will be executed once the timer is over                        // Start your app main activity                        dialogFragment.dismiss(); // when the task active then close the//                        examBtnOption5.clearAnimation();                        Log.e("qid",examTxtQno.getId()+"");                        Log.e("optid",examBtnOption5.getId()+"");                        if(datedifference(s,t)==true)                        {                            showAlert(examTxtQno.getId()+"",examBtnOption1.getId()+"");                        }                        else {                            examPresenter.saveAnswer(examTxtQno.getText().toString(), exam_id, loadQuestionResponse.getTest_id(), userid, "", "1", "ydtdt", examTxtQno.getId() + "", examBtnOption1.getId() + "", lastqn);                            examBtnOption5.setEnabled(true);                        }                    }                }, TIME_OUT);            }        });        mathBtnOption1.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if(mathBtnOption1.isEnabled())                    mathBtnOption1.setEnabled(false);                t=getClicktime();                mathBtnOption1.setBackground(d);//                mathBtnOption1.startAnimation(animation);                dialogFragment=new SuccessFrag3();                showDialog(dialogFragment);                new Handler().postDelayed(new Runnable() {                    @Override                    public void run() {                        // This method will be executed once the timer is over                        // Start your app main activity                        dialogFragment.dismiss(); // when the task active then close the dialog                        Log.e("qid",examTxtQno.getId()+"");                        Log.e("optid",examBtnOption5.getId()+"");                        if(datedifference(s,t)==true)                        {                            showAlert(examTxtQno.getId()+"",mathBtnOption1.getId()+"");                        }                        else {                            examPresenter.saveAnswer(examTxtQno.getText().toString(), exam_id, loadQuestionResponse.getTest_id(), userid, "", "1", "ydtdt", examTxtQno.getId() + "", mathBtnOption1.getId() + "", lastqn);                            mathBtnOption1.setEnabled(true);                             }                    }                }, TIME_OUT);            }        });        mathBtnOption2.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if(mathBtnOption2.isEnabled())                    mathBtnOption2.setEnabled(false);                t=getClicktime();                mathBtnOption2.setBackground(d);//                mathBtnOption2.startAnimation(animation);                dialogFragment=new SuccessFrag3();                showDialog(dialogFragment);                new Handler().postDelayed(new Runnable() {                    @Override                    public void run() {                        // This method will be executed once the timer is over                        // Start your app main activity                        dialogFragment.dismiss(); // when the task active then close the dialog                        Log.e("qid",examTxtQno.getId()+"");                        Log.e("optid",mathBtnOption2.getId()+"");                        if(datedifference(s,t)==true)                        {                            showAlert(examTxtQno.getId()+"",mathBtnOption2.getId()+"");                        }                        else {                            examPresenter.saveAnswer(examTxtQno.getText().toString(), exam_id, loadQuestionResponse.getTest_id(), userid, "", "1", "ydtdt", examTxtQno.getId() + "", mathBtnOption2.getId() + "", lastqn);                            mathBtnOption2.setEnabled(true);                        }                    }                }, TIME_OUT);            }        });        mathBtnOption3.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if(mathBtnOption3.isEnabled())                    mathBtnOption3.setEnabled(false);                t=getClicktime();                mathBtnOption3.setBackground(d);//                mathBtnOption3.startAnimation(animation);                dialogFragment=new SuccessFrag3();                showDialog(dialogFragment);                new Handler().postDelayed(new Runnable() {                    @Override                    public void run() {                        // This method will be executed once the timer is over                        // Start your app main activity                        dialogFragment.dismiss(); // when the task active then close the dialog                        Log.e("qid",examTxtQno.getId()+"");                        Log.e("optid",mathBtnOption3.getId()+"");                        if(datedifference(s,t)==true)                        {                            showAlert(examTxtQno.getId()+"",mathBtnOption3.getId()+"");                        }                        else {                            examPresenter.saveAnswer(examTxtQno.getText().toString(), exam_id, loadQuestionResponse.getTest_id(), userid, "", "1", "ydtdt", examTxtQno.getId() + "", mathBtnOption3.getId() + "", lastqn);                            mathBtnOption3.setEnabled(true);                        }                    }                }, TIME_OUT);            }        });        mathBtnOption4.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if(mathBtnOption4.isEnabled())                    mathBtnOption4.setEnabled(false);                t=getClicktime();                mathBtnOption4.setBackground(d);//                mathBtnOption4.startAnimation(animation);                dialogFragment=new SuccessFrag3();                showDialog(dialogFragment);                new Handler().postDelayed(new Runnable() {                    @Override                    public void run() {                        // This method will be executed once the timer is over                        // Start your app main activity                        dialogFragment.dismiss(); // when the task active then close the dialog                        Log.e("qid",examTxtQno.getId()+"");                        Log.e("optid",mathBtnOption4.getId()+"");                        if(datedifference(s,t)==true)                        {                            showAlert(examTxtQno.getId()+"",mathBtnOption4.getId()+"");                        }                        else {                            examPresenter.saveAnswer(examTxtQno.getText().toString(), exam_id, loadQuestionResponse.getTest_id(), userid, "", "1", "ydtdt", examTxtQno.getId() + "", mathBtnOption4.getId() + "", lastqn);                            mathBtnOption4.setEnabled(true);                        }                    }                }, TIME_OUT);            }        });        mathBtnOption5.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if(mathBtnOption5.isEnabled())                    mathBtnOption5.setEnabled(false);                t=getClicktime();                mathBtnOption5.setBackground(d);//                mathBtnOption5.startAnimation(animation);                dialogFragment=new SuccessFrag3();                showDialog(dialogFragment);                new Handler().postDelayed(new Runnable() {                    @Override                    public void run() {                        // This method will be executed once the timer is over                        // Start your app main activity                        dialogFragment.dismiss(); // when the task active then close the dialog                        Log.e("qid",examTxtQno.getId()+"");                        Log.e("optid",mathBtnOption5.getId()+"");                        if(datedifference(s,t)==true)                        {                            showAlert(examTxtQno.getId()+"",mathBtnOption5.getId()+"");                        }                        else {                            examPresenter.saveAnswer(examTxtQno.getText().toString(), exam_id, loadQuestionResponse.getTest_id(), userid, "", "1", "ydtdt", examTxtQno.getId() + "", mathBtnOption5.getId() + "", lastqn);                            mathBtnOption5.setEnabled(true);                        }                    }                }, TIME_OUT);            }        });    }    @Override    public void onPause() {        super.onPause();        hideLoading();    }    @Override    public  void goToDashboard()    {        sweet=new SweetAlertDialog(getContext(),SweetAlertDialog.NORMAL_TYPE);        sweet.setCancelable(false);        sweet.setTitleText("Alert");        sweet.setContentText("Confirm Exam submit?");        sweet.setConfirmText("Ok!");        sweet .setConfirmClickListener(new SweetAlertDialog.OnSweetClickListener() {                                           @Override                                           public void onClick(SweetAlertDialog sweetAlertDialog) {                                               Intent intent = new Intent(getContext(), DashBoardActivity.class);                                               startActivity(intent);                                               getActivity().finish();                                               sweetAlertDialog.dismissWithAnimation();                                           }                                       }        );        sweet .show();    }    @Override    public void showNextQuestion(SaveAnswerResponse saveAnswerResponse) {        hideLoading();         enableButtons();        setwhitedrawable();        tableview.setVisibility(View.GONE);        tabletextview.setVisibility(View.GONE);        examTxtimgQno.setVisibility(View.GONE);        examTxtQuestion.setVisibility(View.VISIBLE);        Log.e("sectionid",secid);        Log.e("lastqn in saveanswer",lastqn+ "  "+saveAnswerResponse.getRecord().getQn_dts().getQuestion_order());        Log.e("question in saveanswer",lastqn+ "  "+saveAnswerResponse.getRecord().getQn_dts().getQuestion());        Log.e("img status",lastqn+ "  "+saveAnswerResponse.getRecord().getImgStatusOpts()+"  opt"+saveAnswerResponse.getRecord().getImgStatusQns());//        if((Integer.parseInt(saveAnswerResponse.getRecord().getQn_dts().getQuestion_order())<=Integer.parseInt(lastqn)))//        {//            examPresenter.submitexam(exam_id,userid,user_email);//        }//        else {        if(saveAnswerResponse.getRecord().getQn_dts().getQuestion_order().equals(saveAnswerResponse.getRecord().getQn_dts().getTotal_no_questions()))        {            Log.e("lastqn","lastqn"+saveAnswerResponse.getRecord().getQn_dts().getQuestion_order()+"  "+saveAnswerResponse.getRecord().getQn_dts().getTotal_no_questions());            testbtnsubmit.setVisibility(View.VISIBLE);        }        secid = saveAnswerResponse.getRecord().getQn_dts().getSection_id();        Log.e("loadqnsecid1",secid);        Log.e("secid2",saveAnswerResponse.getRecord().getQn_dts().getSection_id());            if (saveAnswerResponse.getRecord().getQn_dts().getSection_id().equals(secid)) {                if (iv != null) {                    iv.setImageResource(0);                }                SimpleDateFormat dateFormat = new SimpleDateFormat("yy/MM/dd HH:mm:ss");                Date today = Calendar.getInstance().getTime();                s = dateFormat.format(today);                Log.e("save startdate", s);                examTxtQno.setText(Html.fromHtml(saveAnswerResponse.getRecord().getQn_dts().getQuestion_order()+". "));                examTxtQno.setId(Integer.parseInt(saveAnswerResponse.getRecord().getQn_dts().getQuestion_id()));                if (saveAnswerResponse.getRecord().getEqStatusQns().equals("1") || saveAnswerResponse.getRecord().getEqStatusOpts().equals("1"))                {                    exammathTxtQno.setText(Html.fromHtml(saveAnswerResponse.getRecord().getQn_dts().getQuestion_order()+". "));                    Log.e("math", "math qn");                    mathlayout.setVisibility(View.VISIBLE);                    htmllayout.setVisibility(View.GONE);                    imglayout.setVisibility(View.GONE);                    exammathTxtQno.setVisibility(View.VISIBLE);                    mathTxtQuestion.setText(saveAnswerResponse.getRecord().getQn_dts().getQuestion());                    if (saveAnswerResponse.getRecord().getOpt_count().equals("2")) {                        mathBtnOption1.setText(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp());                        mathBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));                        mathBtnOption2.setText(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp());                        mathBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));                        mathBtnOption3.setVisibility(View.GONE);                        mathBtnOption4.setVisibility(View.GONE);                        mathBtnOption5.setVisibility(View.GONE);                    } else if (saveAnswerResponse.getRecord().getOpt_count().equals("3")) {                        mathBtnOption1.setText(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp());                        mathBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));                        mathBtnOption2.setText(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp());                        mathBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));                        mathBtnOption3.setText(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp());                        mathBtnOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));                        mathBtnOption4.setVisibility(View.GONE);                        mathBtnOption5.setVisibility(View.GONE);                    } else if (saveAnswerResponse.getRecord().getOpt_count().equals("4")) {                        mathBtnOption1.setText(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp());                        mathBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));                        mathBtnOption2.setText(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp());                        mathBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));                        mathBtnOption3.setText(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp());                        mathBtnOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));                        mathBtnOption4.setText(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_descp());                        mathBtnOption4.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_id()));                        mathBtnOption5.setVisibility(View.GONE);                    } else {                        mathBtnOption1.setText(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp());                        mathBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));                        mathBtnOption2.setText(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp());                        mathBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));                        mathBtnOption3.setText(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp());                        mathBtnOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));                        mathBtnOption4.setText(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_descp());                        mathBtnOption4.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_id()));                        mathBtnOption5.setText(saveAnswerResponse.getRecord().getOpt_dts().get(4).getOption_descp());                        mathBtnOption5.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(4).getOption_id()));                    }                }//                else if (saveAnswerResponse.getRecord().getEqStatusQns().equals("1") || saveAnswerResponse.getRecord().getEqStatusOpts().equals("0"))//                {//                    exammathTxtQno.setText(Html.fromHtml(saveAnswerResponse.getRecord().getQn_dts().getQuestion_order()+". "));//                    Log.e("math", "math qn");//                    mathlayout.setVisibility(View.VISIBLE);//                    htmllayout.setVisibility(View.GONE);//                    imglayout.setVisibility(View.GONE);//                    exammathTxtQno.setVisibility(View.VISIBLE);//                    mathTxtQuestion.setText(saveAnswerResponse.getRecord().getQn_dts().getQuestion());//                    if (saveAnswerResponse.getRecord().getOpt_count().equals("2")) {////                        mathBtnOption1.setText(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp());////                        mathBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));////                        mathBtnOption2.setText(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp());////                        mathBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));////                        mathBtnOption3.setVisibility(View.GONE);//                        mathBtnOption4.setVisibility(View.GONE);//                        mathBtnOption5.setVisibility(View.GONE);////                    } else if (saveAnswerResponse.getRecord().getOpt_count().equals("3")) {////                        mathBtnOption1.setText(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp());////                        mathBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));////                        mathBtnOption2.setText(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp());////                        mathBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));////                        mathBtnOption3.setText(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp());////                        mathBtnOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));////                        mathBtnOption4.setVisibility(View.GONE);//                        mathBtnOption5.setVisibility(View.GONE);////                    } else if (saveAnswerResponse.getRecord().getOpt_count().equals("4")) {//                        mathBtnOption1.setText(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp());//                        mathBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));////                        mathBtnOption2.setText(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp());//                        mathBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));////                        mathBtnOption3.setText(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp());//                        mathBtnOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));////                        mathBtnOption4.setText(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_descp());//                        mathBtnOption4.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_id()));////                        mathBtnOption5.setVisibility(View.GONE);////                    } else {//                        mathBtnOption1.setText(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp());//                        mathBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));////                        mathBtnOption2.setText(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp());//                        mathBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));////                        mathBtnOption3.setText(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp());//                        mathBtnOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));////                        mathBtnOption4.setText(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_descp());//                        mathBtnOption4.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_id()));////                        mathBtnOption5.setText(saveAnswerResponse.getRecord().getOpt_dts().get(4).getOption_descp());//                        mathBtnOption5.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(4).getOption_id()));//                    }////                }//                    Log.e("math", "math qn");//                    mathlayout.setVisibility(View.VISIBLE);//                    htmllayout.setVisibility(View.GONE);//                    mathTxtQuestion.setText(saveAnswerResponse.getRecord().getQn_dts().getQuestion());//                    if (saveAnswerResponse.getRecord().getOpt_count().equals("2")) {////                        mathBtnOption1.setText(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp());////                        mathBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));////                        mathBtnOption2.setText(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp());////                        mathBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));////                        mathBtnOption3.setVisibility(View.GONE);//                        mathBtnOption4.setVisibility(View.GONE);//                        mathBtnOption5.setVisibility(View.GONE);////                    } else if (saveAnswerResponse.getRecord().getOpt_count().equals("3")) {////                        mathBtnOption1.setText(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp());////                        mathBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));////                        mathBtnOption2.setText(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp());////                        mathBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));////                        mathBtnOption3.setText(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp());////                        mathBtnOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));////                        mathBtnOption4.setVisibility(View.GONE);//                        mathBtnOption5.setVisibility(View.GONE);////                    } else if (saveAnswerResponse.getRecord().getOpt_count().equals("4")) {//                        mathBtnOption1.setText(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp());//                        mathBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));////                        mathBtnOption2.setText(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp());//                        mathBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));////                        mathBtnOption3.setText(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp());//                        mathBtnOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));////                        mathBtnOption4.setText(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_descp());//                        mathBtnOption4.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_id()));////                        mathBtnOption5.setVisibility(View.GONE);////                    } else {//                        mathBtnOption1.setText(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp());//                        mathBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));////                        mathBtnOption2.setText(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp());//                        mathBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));////                        mathBtnOption3.setText(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp());//                        mathBtnOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));////                        mathBtnOption4.setText(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_descp());//                        mathBtnOption4.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_id()));////                        mathBtnOption5.setText(saveAnswerResponse.getRecord().getOpt_dts().get(4).getOption_descp());//                        mathBtnOption5.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(4).getOption_id()));//                    }////                }//                else if (saveAnswerResponse.getRecord().getEqStatusQns().equals("1") || saveAnswerResponse.getRecord().getEqStatusOpts().equals("0"))//                {//                    Log.e("math", "math qn");//                    mathlayout.setVisibility(View.VISIBLE);//                    htmllayout.setVisibility(View.GONE);//                    mathTxtQuestion.setText(saveAnswerResponse.getRecord().getQn_dts().getQuestion());//                    if (saveAnswerResponse.getRecord().getOpt_count().equals("2")) {////                        mathBtnOption1.setText(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp());////                        mathBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));////                        mathBtnOption2.setText(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp());////                        mathBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));////                        mathBtnOption3.setVisibility(View.GONE);//                        mathBtnOption4.setVisibility(View.GONE);//                        mathBtnOption5.setVisibility(View.GONE);////                    } else if (saveAnswerResponse.getRecord().getOpt_count().equals("3")) {////                        mathBtnOption1.setText(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp());////                        mathBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));////                        mathBtnOption2.setText(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp());////                        mathBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));////                        mathBtnOption3.setText(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp());////                        mathBtnOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));////                        mathBtnOption4.setVisibility(View.GONE);//                        mathBtnOption5.setVisibility(View.GONE);////                    } else if (saveAnswerResponse.getRecord().getOpt_count().equals("4")) {//                        mathBtnOption1.setText(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp());//                        mathBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));////                        mathBtnOption2.setText(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp());//                        mathBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));////                        mathBtnOption3.setText(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp());//                        mathBtnOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));////                        mathBtnOption4.setText(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_descp());//                        mathBtnOption4.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_id()));////                        mathBtnOption5.setVisibility(View.GONE);////                    } else {//                        mathBtnOption1.setText(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp());//                        mathBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));////                        mathBtnOption2.setText(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp());//                        mathBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));////                        mathBtnOption3.setText(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp());//                        mathBtnOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));////                        mathBtnOption4.setText(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_descp());//                        mathBtnOption4.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_id()));////                        mathBtnOption5.setText(saveAnswerResponse.getRecord().getOpt_dts().get(4).getOption_descp());//                        mathBtnOption5.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(4).getOption_id()));//                    }////                }                else if (saveAnswerResponse.getRecord().getImgStatusQns().equals("1") && saveAnswerResponse.getRecord().getImgStatusOpts().equals("0"))                {                    mathlayout.setVisibility(View.GONE);                    htmllayout.setVisibility(View.VISIBLE);                    imglayout.setVisibility(View.GONE);                    examTxtimgQno.setText(Html.fromHtml(saveAnswerResponse.getRecord().getQn_dts().getQuestion_order()+". "));                    examTxtQuestion.setHtml(saveAnswerResponse.getRecord().getQn_dts().getQuestion(), new HtmlHttpImageGetter(examTxtQuestion));                    Log.e("Questiontext", saveAnswerResponse.getRecord().getQn_dts().getQuestion());                    setImage(saveAnswerResponse.getRecord().getQn_dts().getQuestion(), examTxtQuestion.getId(), imageviewlayout.getId());                    if (saveAnswerResponse.getRecord().getOpt_count().equals("2")) {                        examBtnOption1.setHtml(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp(), new HtmlHttpImageGetter(examBtnOption1));                        examBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));                        Log.e("opt1", examBtnOption1.getId() + "");                        Log.e("optdesc", saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp() + "");//                    examBtnOption2.setHtml(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp(), new HtmlHttpImageGetter(examBtnOption2));//                        setImage(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp(), examBtnOption2.getId());                        examBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));                        Log.e("opt2", examBtnOption2.getId() + "");                        examBtnOption3.setVisibility(View.GONE);                        examBtnOption4.setVisibility(View.GONE);                        examBtnOption5.setVisibility(View.GONE);//                    } else if (saveAnswerResponse.getRecord().getOpt_count().equals("3")) {                        Log.e("optioncount3",saveAnswerResponse.getRecord().getOpt_count());//                    if (saveAnswerResponse.getRecord().getImgStatusOpts().equals("1")) {                        examBtnOption1.setHtml(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp(), new HtmlHttpImageGetter(examBtnOption1));//                        setImage(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp(), examBtnOption1.getId());                        examBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));                        Log.e("opt1", examBtnOption1.getId() + "");                        examBtnOption2.setHtml(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp(), new HtmlHttpImageGetter(examBtnOption2));//                        setImage(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp(), examBtnOption2.getId());                        examBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));                        Log.e("opt2", examBtnOption2.getId() + "");                        examBtnOption3.setHtml(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp(), new HtmlHttpImageGetter(examBtnOption3));//                        setImage(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp(), examBtnOption3.getId());                        examBtnOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));                        examBtnOption4.setVisibility(View.GONE);                        examBtnOption5.setVisibility(View.GONE);                    } else if (saveAnswerResponse.getRecord().getOpt_count().equals("4")) {//                    if (saveAnswerResponse.getRecord().getImgStatusOpts().equals("1")) {                        examBtnOption1.setHtml(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp(), new HtmlHttpImageGetter(examBtnOption1));//                        setImage(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp(), examBtnOption1.getId());                        examBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));                        Log.e("opt1", examBtnOption1.getId() + "");                        Log.e("optdesc", saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp() + "");//                    examBtnOption2.setHtml(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp(), new HtmlHttpImageGetter(examBtnOption2));//                        setImage(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp(), examBtnOption2.getId());                        examBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));                        Log.e("opt2", examBtnOption2.getId() + "");//                    examBtnOption3.setHtml(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp(), new HtmlHttpImageGetter(examBtnOption3));//                        setImage(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp(), examBtnOption3.getId());                        examBtnOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));                        Log.e("opt3", examBtnOption3.getId() + "");                        examBtnOption4.setHtml(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_descp(), new HtmlHttpImageGetter(examBtnOption4));//                        setImage(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_descp(), examBtnOption4.getId());                        examBtnOption4.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_id()));                        Log.e("opt4", examBtnOption4.getId() + "");                        examBtnOption5.setVisibility(View.GONE);                    } else if (saveAnswerResponse.getRecord().getOpt_count().equals("5")) {//                    if (saveAnswerResponse.getRecord().getImgStatusOpts().equals("1")) {                        examBtnOption1.setHtml(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp(), new HtmlHttpImageGetter(examBtnOption1));//                        setImage(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp(), examBtnOption1.getId());                        examBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));                        Log.e("opt1", examBtnOption1.getId() + "");                        examBtnOption2.setHtml(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp(), new HtmlHttpImageGetter(examBtnOption2));//                        setImage(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp(), examBtnOption2.getId());                        examBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));                        Log.e("opt2", examBtnOption2.getId() + "");                        examBtnOption3.setHtml(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp(), new HtmlHttpImageGetter(examBtnOption3));//                        setImage(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp(), examBtnOption3.getId());                        examBtnOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));                        Log.e("opt3", examBtnOption3.getId() + "");                        examBtnOption4.setHtml(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_descp(), new HtmlHttpImageGetter(examBtnOption4));//                        setImage(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_descp(), examBtnOption4.getId());                        examBtnOption4.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_id()));                        Log.e("opt4", examBtnOption4.getId() + "");                        examBtnOption5.setHtml(saveAnswerResponse.getRecord().getOpt_dts().get(4).getOption_descp(), new HtmlHttpImageGetter(examBtnOption5));//                        setImage(saveAnswerResponse.getRecord().getOpt_dts().get(4).getOption_descp(), examBtnOption5.getId());                        examBtnOption5.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(4).getOption_id()));                        Log.e("opt5", examBtnOption5.getId() + "");                    }                }                else if (saveAnswerResponse.getRecord().getImgStatusQns().equals("1") && saveAnswerResponse.getRecord().getImgStatusOpts().equals("1"))                {                    mathlayout.setVisibility(View.GONE);                    htmllayout.setVisibility(View.GONE);                    imglayout.setVisibility(View.VISIBLE);                    examTxtimgQno.setText(Html.fromHtml(saveAnswerResponse.getRecord().getQn_dts().getQuestion_order()+". "));                    imgTxtQuestion.setHtml(saveAnswerResponse.getRecord().getQn_dts().getQuestion(), new HtmlHttpImageGetter(imgTxtQuestion));                    imagebelowqn.setVisibility(View.VISIBLE);                    Log.e("Questiontext", saveAnswerResponse.getRecord().getQn_dts().getQuestion());//                    setImage(saveAnswerResponse.getRecord().getQn_dts().getQuestion(), imgTxtQuestion.getId(), imlayout.getId());                    Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getQn_dts().getQuestion())).into(imagebelowqn);                    if (saveAnswerResponse.getRecord().getOpt_count().equals("2")) {                        String imgurl = CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp());                        Picasso.get().load(imgurl).into(imgOption1);//                        setImage(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp(), examBtnOption1.getId());                        imgOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));                        Log.e("opt1", imgOption1.getId() + "");                        Log.e("optdesc", saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp() + "");                        Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp())).into(imgOption2);                        imgOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));                        Log.e("opt2", imgOption2.getId() + "");                        imgOption3.setVisibility(View.GONE);                        imgOption4.setVisibility(View.GONE);                        imgOption5.setVisibility(View.GONE);                        option_a.setVisibility(View.VISIBLE);                        option_b.setVisibility(View.VISIBLE);                    } else if (saveAnswerResponse.getRecord().getOpt_count().equals("3")) {                        Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp())).into(imgOption1);                        imgOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));                        Log.e("opt1", imgOption1.getId() + "");                        Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp())).into(imgOption2);                        imgOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));                        Log.e("opt2", imgOption1.getId() + "");                        Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp())).into(imgOption3);                        imgOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));                        imgOption4.setVisibility(View.GONE);                        imgOption5.setVisibility(View.GONE);                        option_a.setVisibility(View.VISIBLE);                        option_b.setVisibility(View.VISIBLE);                        option_c.setVisibility(View.VISIBLE);                    } else if (saveAnswerResponse.getRecord().getOpt_count().equals("4")) {                        Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp())).into(imgOption1);                        imgOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));                        Log.e("opt1", imgOption1.getId() + "");                        Log.e("optdesc", saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp() + "");                        Log.e("optresponse", saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id());//                    examBtnOption2.setHtml(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp(), new HtmlHttpImageGetter(examBtnOption2));//                        setImage(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp(), examBtnOption2.getId());                        Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp())).into(imgOption2);                        imgOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));                        Log.e("opt2", imgOption2.getId() + "");//                    examBtnOption3.setHtml(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp(), new HtmlHttpImageGetter(examBtnOption3));//                        setImage(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp(), examBtnOption3.getId());                        Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp())).into(imgOption3);                        imgOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));                        Log.e("opt3", imgOption3.getId() + "");                        Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_descp())).into(imgOption4);                        imgOption4.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_id()));                        Log.e("opt4", imgOption4.getId() + "");                        imgOption5.setVisibility(View.GONE);                        option_a.setVisibility(View.VISIBLE);                        option_b.setVisibility(View.VISIBLE);                        option_c.setVisibility(View.VISIBLE);                        option_d.setVisibility(View.VISIBLE);                    } else if (saveAnswerResponse.getRecord().getOpt_count().equals("5")) {                        Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp())).into(imgOption1);                        imgOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));                        Log.e("opt1", imgOption1.getId() + "");                        Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp())).into(imgOption2);                        imgOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));                        Log.e("opt2", imgOption2.getId() + "");                        Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp())).into(imgOption3);                        imgOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));                        Log.e("opt3", imgOption3.getId() + "");                        Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_descp())).into(imgOption4);                        imgOption4.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_id()));                        Log.e("opt4", imgOption4.getId() + "");                        Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(4).getOption_descp())).into(imgOption5);                        imgOption5.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(4).getOption_id()));                        Log.e("opt5", imgOption5.getId() + "");                        option_a.setVisibility(View.VISIBLE);                        option_b.setVisibility(View.VISIBLE);                        option_c.setVisibility(View.VISIBLE);                        option_d.setVisibility(View.VISIBLE);                        option_e.setVisibility(View.VISIBLE);                    }                }                else if (saveAnswerResponse.getRecord().getImgStatusQns().equals("0") && saveAnswerResponse.getRecord().getImgStatusOpts().equals("1"))                {                    mathlayout.setVisibility(View.GONE);                     htmllayout.setVisibility(View.GONE);                     imglayout.setVisibility(View.VISIBLE);                    imgTxtQuestion.setHtml(saveAnswerResponse.getRecord().getQn_dts().getQuestion(), new HtmlHttpImageGetter(imgTxtQuestion));                    Log.e("Questiontext", saveAnswerResponse.getRecord().getQn_dts().getQuestion());//                    setImage(saveAnswerResponse.getRecord().getQn_dts().getQuestion(), imgTxtQuestion.getId(), imlayout.getId());                    if (saveAnswerResponse.getRecord().getOpt_count().equals("2")) {//                    if (saveAnswerResponse.getRecord().getImgStatusOpts().equals("1")) {////                    examBtnOption1.setHtml(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp(), new HtmlHttpImageGetter(examBtnOption1));                        String imgurl = CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp());                        Picasso.get().load(imgurl).into(imgOption1);//                        setImage(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp(), examBtnOption1.getId());                        imgOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));                        Log.e("opt1", imgOption1.getId() + "");                        Log.e("optdesc", saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp() + "");                        Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp())).into(imgOption2);                        imgOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));                        Log.e("opt2", imgOption2.getId() + "");                        imgOption3.setVisibility(View.GONE);                        imgOption4.setVisibility(View.GONE);                        imgOption5.setVisibility(View.GONE);                    } else if (saveAnswerResponse.getRecord().getOpt_count().equals("3")) {                        Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp())).into(imgOption1);                        imgOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));                        Log.e("opt1", imgOption1.getId() + "");                        Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp())).into(imgOption2);                        imgOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));                        Log.e("opt2", imgOption1.getId() + "");                        Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp())).into(imgOption3);                        imgOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));                        imgOption4.setVisibility(View.GONE);                        imgOption5.setVisibility(View.GONE);                    } else if (saveAnswerResponse.getRecord().getOpt_count().equals("4")) {                        Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp())).into(imgOption1);                        imgOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));                        Log.e("opt1", imgOption1.getId() + "");                        Log.e("optdesc", saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp() + "");                        Log.e("optresponse", saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id());                        Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp())).into(imgOption2);                        imgOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));                        Log.e("opt2", imgOption2.getId() + "");                        Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp())).into(imgOption3);                        imgOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));                        Log.e("opt3", imgOption3.getId() + "");                        Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_descp())).into(imgOption4);                        imgOption4.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_id()));                        Log.e("opt4", imgOption4.getId() + "");                        imgOption5.setVisibility(View.GONE);                    } else if (saveAnswerResponse.getRecord().getOpt_count().equals("5")) {                        Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp())).into(imgOption1);                        imgOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));                        Log.e("opt1", imgOption1.getId() + "");                        Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp())).into(imgOption2);                        imgOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));                        Log.e("opt2", imgOption2.getId() + "");                        Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp())).into(imgOption3);                        imgOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));                        Log.e("opt3", imgOption3.getId() + "");                        Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_descp())).into(imgOption4);                        imgOption4.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_id()));                        Log.e("opt4", imgOption4.getId() + "");                        Picasso.get().load(CreateImgUrl(saveAnswerResponse.getRecord().getOpt_dts().get(4).getOption_descp())).into(imgOption5);                        imgOption5.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(4).getOption_id()));                        Log.e("opt5", imgOption5.getId() + "");                    }                }                else {                    examTxtQno.setText(Html.fromHtml(saveAnswerResponse.getRecord().getQn_dts().getQuestion_order()+". "));                    Log.e("elselast", "no qn number");                    mathlayout.setVisibility(View.GONE);                    htmllayout.setVisibility(View.VISIBLE);                    imglayout.setVisibility(View.GONE);                    if (saveAnswerResponse.getRecord().getQn_dts().getQuestion().contains("<table")) {                        setTable(saveAnswerResponse.getRecord().getQn_dts().getQuestion());                        if (saveAnswerResponse.getRecord().getOpt_count().equals("2")) {                            examBtnOption1.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp()));                            examBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));                            examBtnOption2.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp()));                            examBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));                        } else if (saveAnswerResponse.getRecord().getOpt_count().equals("3")) {                            examBtnOption1.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp()));                            examBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));                            examBtnOption2.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp()));                            examBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));                            examBtnOption3.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp()));                            examBtnOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));                        } else if (saveAnswerResponse.getRecord().getOpt_count().equals("4")) {                            examBtnOption1.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp()));                            examBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));                            examBtnOption2.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp()));                            examBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));                            examBtnOption3.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp()));                            examBtnOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));                            examBtnOption4.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_descp()));                            examBtnOption4.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_id()));                        } else {                            examBtnOption1.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp()));                            examBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));                            examBtnOption2.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp()));                            examBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));                            examBtnOption3.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp()));                            examBtnOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));                            examBtnOption4.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_descp()));                            examBtnOption4.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_id()));                            examBtnOption5.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(4).getOption_descp()));                            examBtnOption5.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(4).getOption_id()));                        }                    } else {                        Log.e("shownext", saveAnswerResponse.getRecord().getQn_dts().getQuestion());                        Log.e("num_options", saveAnswerResponse.getRecord().getOpt_count());                        examTxtQuestion.setText(Html.fromHtml(saveAnswerResponse.getRecord().getQn_dts().getQuestion()));                        if (saveAnswerResponse.getRecord().getOpt_count().equals("2")) {                            examBtnOption1.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp()));                            examBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));                            examBtnOption2.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp()));                            examBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));                            examBtnOption3.setVisibility(View.GONE);                            examBtnOption4.setVisibility(View.GONE);                            examBtnOption5.setVisibility(View.GONE);                        } else if (saveAnswerResponse.getRecord().getOpt_count().equals("3")) {                            examBtnOption1.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp()));                            examBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));                            examBtnOption2.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp()));                            examBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));                            examBtnOption3.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp()));                            examBtnOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));                            examBtnOption4.setVisibility(View.GONE);                            examBtnOption5.setVisibility(View.GONE);                        } else if (saveAnswerResponse.getRecord().getOpt_count().equals("4")) {                            examBtnOption1.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp()));                            examBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));                            examBtnOption2.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp()));                            examBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));                            examBtnOption3.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp()));                            examBtnOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));                            examBtnOption4.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_descp()));                            examBtnOption4.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_id()));                            examBtnOption5.setVisibility(View.GONE);                        } else {                            examBtnOption1.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_descp()));                            examBtnOption1.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(0).getOption_id()));                            examBtnOption2.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_descp()));                            examBtnOption2.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(1).getOption_id()));                            examBtnOption3.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_descp()));                            examBtnOption3.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(2).getOption_id()));                            examBtnOption4.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_descp()));                            examBtnOption4.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(3).getOption_id()));                            examBtnOption5.setText(Html.fromHtml(saveAnswerResponse.getRecord().getOpt_dts().get(4).getOption_descp()));                            examBtnOption5.setId(Integer.parseInt(saveAnswerResponse.getRecord().getOpt_dts().get(4).getOption_id()));                        }                    }                }            }            else {                animation.cancel();                hideLoading();                new TestCategoryPresenter(this).getQuestionsFromServer(exam_id, test_id, userid, user_email, "0", "1", "fhj", "0");            }        }//    }    @Override   public  void LoadFragment(Fragment f)    {        // Create new fragment and transaction        FragmentTransaction transaction = getFragmentManager().beginTransaction();        transaction.replace(R.id.qa_layout, f);        transaction.addToBackStack(null);        transaction.commit();    }    @Override    public void onResume() {        super.onResume();    }    @Override    public void selectAnswer()    {    }    @Override    public void showDialog(DialogFragment dialogFragment)    {        FragmentTransaction ft = getFragmentManager().beginTransaction();        Fragment prev = getFragmentManager().findFragmentByTag("dialog");        if (prev != null) {            ft.remove(prev);        }        ft.addToBackStack(null);        dialogFragment.show(ft, "dialog");    }    void stopHandler()    {        try {            handler.removeCallbacks(runnable);            handler.removeCallbacksAndMessages(null);            handler = null;            runnable = null;        }catch (Exception e){            Log.e("ThreadUtil:","Error:"+e.toString());    }    }    @Override    public void showLoading() {        kProgressHUD.setStyle(KProgressHUD.Style.SPIN_INDETERMINATE)                .setLabel("Please wait..")                .setCancellable(true)                .setAnimationSpeed(5)                .setDimAmount(0.5f)                .show();    }    @Override    public void hideLoading() {        if(kProgressHUD.isShowing())            kProgressHUD.dismiss();    }    @Nullable    @Override    public Context getContext() {        return getActivity();    }    @Override    public void goToNextFragment() {    }    @Override    public void onCreate(Bundle savedInstanceState)    {        super.onCreate(savedInstanceState);    }}